<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="basic.user">
    <resultMap id="BasicUserMap" type="BasicUser">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="mobile" property="mobile"/>
        <result column="password" property="password"/>
        <result column="status" property="status"/>
        <result column="group_ids" property="groupIds"/>
        <result column="role_json" property="roleJson"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        basic_users
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        name, 
        email, 
        mobile, 
        password, 
        status, 
        group_ids, 
        role_json, 
        extra_json, 
        created_at, 
        updated_at
        
    </sql>

    <sql id="vals">
        #{name}, 
        #{email}, 
        #{mobile}, 
        #{password}, 
        #{status}, 
        #{groupIds}, 
        #{roleJson}, 
        #{extraJson}, 
        now(), 
        now()
        
    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="name != null">AND name = #{name}</if>
        <if test="email != null">AND email = #{email}</if>
        <if test="mobile != null">AND mobile = #{mobile}</if>
        <if test="password != null">AND password = #{password}</if>
        <if test="status != null">AND status = #{status}</if>
        <if test="groupIds != null">AND group_ids = #{groupIds}</if>
        <if test="roleJson != null">AND role_json = #{roleJson}</if>
        <if test="extraJson != null">AND extra_json = #{extraJson}</if>
    </sql>

    <insert id="create" parameterType="BasicUser" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>


    <select id="findById" parameterType="long" resultMap="BasicUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>




    <select id="findByMobile" parameterType="string" resultMap="BasicUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE mobile = #{mobile}
    </select>



    <update id="update" parameterType="BasicUser">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="email != null">email = #{email},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="password != null">password = #{password},</if>
            <if test="status != null">status = #{status},</if>
            <if test="groupIds != null">group_ids = #{groupIds},</if>
            <if test="roleJson != null">role_json = #{roleJson},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="findAll"  resultMap="BasicUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            1=1
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="BasicUserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        LIMIT #{offset}, #{limit}
    </select>

</mapper>